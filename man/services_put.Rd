% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generated_client.R
\name{services_put}
\alias{services_put}
\title{Replace all attributes of this Service}
\usage{
services_put(id, name = NULL, description = NULL,
  docker_image_name = NULL, docker_image_tag = NULL, schedule = NULL,
  replicas = NULL, max_replicas = NULL, instance_type = NULL,
  memory = NULL, cpu = NULL, credentials = NULL, api_key_id = NULL,
  git_repo_url = NULL, git_repo_ref = NULL, git_path_dir = NULL,
  environment_variables = NULL, notifications = NULL)
}
\arguments{
\item{id}{integer required. The ID for this Service.}

\item{name}{string optional. The name of this Service.}

\item{description}{string optional. The description of this Service.}

\item{docker_image_name}{string optional. The name of the docker image to pull from DockerHub.}

\item{docker_image_tag}{string optional. The tag of the docker image to pull from DockerHub (default: latest).}

\item{schedule}{object optional. A list containing the following elements: 
\itemize{
\item runtimePlan string, Only affects the service when deployed. On Demand means that the service will be turned on when viewed and automatically turned off after periods of inactivity.  Specific Times means the service will be on when scheduled. Always On means the deployed service will always be on.
\item recurrences array, List of day-hour combinations this object is scheduled for
}}

\item{replicas}{integer optional. The number of Service replicas to deploy. When maxReplicas is set, this field defines the minimum number of replicas to deploy.}

\item{max_replicas}{integer optional. The maximum number of Service replicas to deploy. Defining this field enables autoscaling.}

\item{instance_type}{string optional. The EC2 instance type to deploy to.}

\item{memory}{integer optional. The amount of memory allocated to each replica of the Service.}

\item{cpu}{integer optional. The amount of cpu allocated to each replica of the the Service.}

\item{credentials}{array optional. A list of credential IDs to pass to the Service.}

\item{api_key_id}{integer optional. API key id of user}

\item{git_repo_url}{string optional. The url for the git repo where the Service code lives.}

\item{git_repo_ref}{string optional. The git reference to use when pulling code from the repo.}

\item{git_path_dir}{string optional. The path to the Shiny app code within the git repo. If unspecified, the root directory will be used.}

\item{environment_variables}{object optional. Environment Variables to be passed into the Service.}

\item{notifications}{object optional. A list containing the following elements: 
\itemize{
\item failureEmailAddresses array, Addresses to notify by e-mail when the service fails.
\item failureOn boolean, If failure email notifications are on
}}
}
\value{
A list containing the following elements:
\item{id}{integer, The ID for this Service.}
\item{name}{string, The name of this Service.}
\item{description}{string, The description of this Service.}
\item{user}{object, A list containing the following elements: 
\itemize{
\item id integer, The ID of this user.
\item name string, This user's name.
\item username string, This user's username.
\item initials string, This user's initials.
\item online boolean, Whether this user is online.
}}
\item{dockerImageName}{string, The name of the docker image to pull from DockerHub.}
\item{dockerImageTag}{string, The tag of the docker image to pull from DockerHub (default: latest).}
\item{schedule}{object, A list containing the following elements: 
\itemize{
\item runtimePlan string, Only affects the service when deployed. On Demand means that the service will be turned on when viewed and automatically turned off after periods of inactivity.  Specific Times means the service will be on when scheduled. Always On means the deployed service will always be on.
\item recurrences array, List of day-hour combinations this object is scheduled for
}}
\item{timeZone}{string, }
\item{replicas}{integer, The number of Service replicas to deploy. When maxReplicas is set, this field defines the minimum number of replicas to deploy.}
\item{maxReplicas}{integer, The maximum number of Service replicas to deploy. Defining this field enables autoscaling.}
\item{instanceType}{string, The EC2 instance type to deploy to.}
\item{memory}{integer, The amount of memory allocated to each replica of the Service.}
\item{cpu}{integer, The amount of cpu allocated to each replica of the the Service.}
\item{createdAt}{string, }
\item{updatedAt}{string, }
\item{credentials}{array, A list of credential IDs to pass to the Service.}
\item{apiKeyId}{integer, API key id of user}
\item{gitRepoUrl}{string, The url for the git repo where the Service code lives.}
\item{gitRepoRef}{string, The git reference to use when pulling code from the repo.}
\item{gitPathDir}{string, The path to the Shiny app code within the git repo. If unspecified, the root directory will be used.}
\item{reportId}{integer, The ID of the associated report.}
\item{currentDeployment}{object, A list containing the following elements: 
\itemize{
\item deploymentId integer, The ID for this deployment.
\item userId integer, The ID of the owner.
\item host string, Domain of the deployment.
\item name string, Name of the deployment.
\item dockerImageName string, The name of the docker image to pull from DockerHub.
\item dockerImageTag string, The tag of the docker image to pull from DockerHub (default: latest).
\item displayUrl string, URL that displays the deployed platform object and includes auth token.
\item instanceType string, The EC2 instance type requested for the deployment.
\item memory integer, The memory allocated to the deployment.
\item cpu integer, The cpu allocated to the deployment.
\item state string, The state of the deployment.
\item stateMessage string, A detailed description of the state.
\item createdAt string, 
\item updatedAt string, 
\item published boolean, 
\item serviceId integer, The ID of owning Service
}}
\item{previewDeployment}{object, A list containing the following elements: 
\itemize{
\item deploymentId integer, The ID for this deployment.
\item userId integer, The ID of the owner.
\item host string, Domain of the deployment.
\item name string, Name of the deployment.
\item dockerImageName string, The name of the docker image to pull from DockerHub.
\item dockerImageTag string, The tag of the docker image to pull from DockerHub (default: latest).
\item displayUrl string, URL that displays the deployed platform object and includes auth token.
\item instanceType string, The EC2 instance type requested for the deployment.
\item memory integer, The memory allocated to the deployment.
\item cpu integer, The cpu allocated to the deployment.
\item state string, The state of the deployment.
\item stateMessage string, A detailed description of the state.
\item createdAt string, 
\item updatedAt string, 
\item published boolean, 
\item serviceId integer, The ID of owning Service
}}
\item{currentUrl}{string, The URL that the service is hosted at.}
\item{previewUrl}{string, The URL that previews of the service are hosted at.}
\item{environmentVariables}{object, Environment Variables to be passed into the Service.}
\item{notifications}{object, A list containing the following elements: 
\itemize{
\item failureEmailAddresses array, Addresses to notify by e-mail when the service fails.
\item failureOn boolean, If failure email notifications are on
}}
\item{archived}{string, The archival status of the requested object(s).}
\item{hidden}{boolean, The hidden status of the object.}
}
\description{
Replace all attributes of this Service
}
