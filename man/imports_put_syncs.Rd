% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generated_client.R
\name{imports_put_syncs}
\alias{imports_put_syncs}
\title{Update a sync}
\usage{
imports_put_syncs(id, sync_id, source, destination, advanced_options = NULL)
}
\arguments{
\item{id}{integer required. The ID of the import to fetch.}

\item{sync_id}{integer required. The ID of the sync to fetch.}

\item{source}{object required. A list containing the following elements: 
\itemize{
\item path string, The path of the dataset to sync from; for a database source, schema.tablename. If you are doing a Google Sheet export, this can be blank. This is a legacy parameter, it is recommended you use one of the following: databaseTable, file, googleWorksheet, salesforce, silverpop
\item databaseTable object, 
\item file object, 
\item googleWorksheet object, 
\item salesforce object, 
\item silverpop object, 
}}

\item{destination}{object required. A list containing the following elements: 
\itemize{
\item path string, The schema.tablename to sync to. If you are doing a Google Sheet export, this is the spreadsheet and sheet name separated by a period. i.e. if you have a spreadsheet named "MySpreadsheet" and a sheet called "Sheet1" this field would be "MySpreadsheet.Sheet1". This is a legacy parameter, it is recommended you use one of the following: databaseTable, googleWorksheet
\item databaseTable object, 
\item googleWorksheet object, 
}}

\item{advanced_options}{object optional. A list containing the following elements: 
\itemize{
\item maxErrors integer, 
\item existingTableRows string, 
\item diststyle string, 
\item distkey string, 
\item sortkey1 string, 
\item sortkey2 string, 
\item columnDelimiter string, 
\item columnOverrides object, Hash used for overriding auto-detected names and types, with keys being the index of the column being overridden.
\item identityColumn string, 
\item rowChunkSize integer, 
\item wipeDestinationTable boolean, 
\item truncateLongLines boolean, 
\item invalidCharReplacement string, 
\item verifyTableRowCounts boolean, 
\item partitionColumnName string, 
\item partitionSchemaName string, 
\item partitionTableName string, 
\item partitionTablePartitionColumnMinName string, 
\item partitionTablePartitionColumnMaxName string, 
\item lastModifiedColumn string, 
\item mysqlCatalogMatchesSchema boolean, 
\item chunkingMethod string, The method used to break the data into smaller chunks for transfer.  The value can be set to sorted_by_identity_columns or if not set the chunking method will be choosen automatically.
\item firstRowIsHeader boolean, 
\item exportAction string, The kind of export action you want to have the export execute. Set to "newsprsht" if you want a new worksheet inside a new spreadsheet. Set to "newwksht" if you want a new worksheet inside an existing spreadsheet. Set to "updatewksht" if you want to overwrite an existing worksheet inside an existing spreadsheet. Set to "appendwksht" if you want to append to the end of an existing worksheet inside an existing spreadsheet. 
\item sqlQuery string, If you are doing a Google Sheet export, this is your SQL query.
\item contactLists string, 
\item soqlQuery string, 
}}
}
\value{
A list containing the following elements:
\item{id}{integer, }
\item{source}{object, A list containing the following elements: 
\itemize{
\item id integer, The ID of the table or file, if available.
\item path string, The path of the dataset to sync from; for a database source, schema.tablename. If you are doing a Google Sheet export, this can be blank. This is a legacy parameter, it is recommended you use one of the following: databaseTable, file, googleWorksheet, salesforce, silverpop
\item databaseTable object, 
\item file object, 
\item googleWorksheet object, 
\item salesforce object, 
\item silverpop object, 
}}
\item{destination}{object, A list containing the following elements: 
\itemize{
\item path string, The schema.tablename to sync to. If you are doing a Google Sheet export, this is the spreadsheet and sheet name separated by a period. i.e. if you have a spreadsheet named "MySpreadsheet" and a sheet called "Sheet1" this field would be "MySpreadsheet.Sheet1". This is a legacy parameter, it is recommended you use one of the following: databaseTable, googleWorksheet
\item databaseTable object, 
\item googleWorksheet object, 
}}
\item{advancedOptions}{object, A list containing the following elements: 
\itemize{
\item maxErrors integer, 
\item existingTableRows string, 
\item diststyle string, 
\item distkey string, 
\item sortkey1 string, 
\item sortkey2 string, 
\item columnDelimiter string, 
\item columnOverrides object, Hash used for overriding auto-detected names and types, with keys being the index of the column being overridden.
\item identityColumn string, 
\item rowChunkSize integer, 
\item wipeDestinationTable boolean, 
\item truncateLongLines boolean, 
\item invalidCharReplacement string, 
\item verifyTableRowCounts boolean, 
\item partitionColumnName string, 
\item partitionSchemaName string, 
\item partitionTableName string, 
\item partitionTablePartitionColumnMinName string, 
\item partitionTablePartitionColumnMaxName string, 
\item lastModifiedColumn string, 
\item mysqlCatalogMatchesSchema boolean, 
\item chunkingMethod string, The method used to break the data into smaller chunks for transfer.  The value can be set to sorted_by_identity_columns or if not set the chunking method will be choosen automatically.
\item firstRowIsHeader boolean, 
\item exportAction string, The kind of export action you want to have the export execute. Set to "newsprsht" if you want a new worksheet inside a new spreadsheet. Set to "newwksht" if you want a new worksheet inside an existing spreadsheet. Set to "updatewksht" if you want to overwrite an existing worksheet inside an existing spreadsheet. Set to "appendwksht" if you want to append to the end of an existing worksheet inside an existing spreadsheet. 
\item sqlQuery string, If you are doing a Google Sheet export, this is your SQL query.
\item contactLists string, 
\item soqlQuery string, 
}}
}
\description{
Update a sync
}
